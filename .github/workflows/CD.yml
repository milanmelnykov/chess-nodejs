name: CHESS CD
env: 
  AWS_REGION    : "eu-central-1"
  NODE_VERSION  : "6.x"
  FRONTEND_NAME : "chess-front"
  BACKEND_NAME  : "chess-back"
on:
  push:
    branches: 
      - feature/docker

jobs:
  CD:
    runs-on: ubuntu-latest

    steps:  
    - name: Checkout 
      uses: actions/checkout@v2
      
    - name: Setup node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1.2.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Docker login
      run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
    
    - name: Gazer dependencies
      run: npm install
       
    - name: Build docker backend image 
      run: docker build -t ${{ secrets.DOCKER_USER }}/${{ env.BACKEND_NAME }} -f Docker/DockerfileBack . \
       --build-arg MONGO_USER=${{ secrets.MONGO_USER }} --build-arg MONGO_PASS=${{ secrets.MONGO_PASS }} \
       --build-arg MONGO_URI='${{ secrets.MONGO_URI }}'

    # temp - ip should be assigned as k8s ... 
    - name: Build frontend application
      run: |
        NODE_ENV=production API_URL=//$(aws ec2 describe-instances \
        --region ${{ env.AWS_REGION }} \
        --filter Name=tag:Name,Values=chess-back \
        --output=text |grep ASSOCIATION|uniq -c|awk '{print $5}'):8081 \
        npm run build
        
    - name: Build docker frontend image
      run: docker build -t ${{ secrets.DOCKER_USER }}/${{ env.FRONTEND_NAME }} -f Docker/DockerfileFront . 
      
    - name: Publish images to DockerHub
      run: |
         docker push ${{ secrets.DOCKER_USER }}/${{ env.FRONTEND_NAME }}
         docker push ${{ secrets.DOCKER_USER }}/${{ env.BACKEND_NAME }}
